[
  {
    "objectID": "histogram.html",
    "href": "histogram.html",
    "title": "Histograms",
    "section": "",
    "text": "A histogram is a graph that compares the frequency (y-axis) of any categorical or numeric variable (x-axis). In other words, it measures how often a value from the x-axis appears in a data set.\nHere is the framework of a histogram:",
    "crumbs": [
      "Histograms"
    ]
  },
  {
    "objectID": "histogram.html#what-is-a-histogram",
    "href": "histogram.html#what-is-a-histogram",
    "title": "Histograms",
    "section": "",
    "text": "A histogram is a graph that compares the frequency (y-axis) of any categorical or numeric variable (x-axis). In other words, it measures how often a value from the x-axis appears in a data set.\nHere is the framework of a histogram:",
    "crumbs": [
      "Histograms"
    ]
  },
  {
    "objectID": "histogram.html#penguin-data",
    "href": "histogram.html#penguin-data",
    "title": "Histograms",
    "section": "2 Penguin Data",
    "text": "2 Penguin Data\nIn the penguin dataset, we can use a histogram to determine how often each bill depth (variable: bill_depth_mm) value appears in the dataset.\nHere, there is a deviation from the ggplot framework in the home page. “bins” is used to tell R how many bars to create in your histogram. You can change this number as needed. Ideally, you want to keep the bin number large enough to see patterns in your data , but small enough to keep outliers to a minimum.\n\nggplot(data=penguins, mapping=aes(x=bill_depth_mm, na.rm=TRUE))+\n  geom_histogram(bins=20)+\n  labs(title=\"Distribution of Antarctic Penguin Bill Depth\", x=\"Bill depth (mm)\", y=\"Frequency\")\n\n\n\n\n\n\n\n\nThis data is pretty noisy. There appears to be three peaks. There are three species of penguins in this data set. Perhaps each peak represents each species?\nLet’s see if there is a trend in Gentoo penguins.\nFirst, we must filter the penguin data to include only Gentoo penguins by creating a new variable, “gentooPenguins”.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nNow let’s create a histogram of the distribution of Gentoo penguin bill depths. Don’t worry about adding a title or axes labels!\n\nCode editorHintAnswer\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nR is case sensitive! The data set is named “gentooPenguins” and the variable is “bill_depth_mm”.\n\n\n\nggplot(data=gentooPenguins, mapping=aes(x=bill_depth_mm, na.rm=TRUE))+\n  geom_histogram(bins=20)\n\nThis data still appears to show no clear pattern. Perhaps there is no trend in bill depth for Gentoo penguins in the data provided.",
    "crumbs": [
      "Histograms"
    ]
  },
  {
    "objectID": "tipsAndTricks.html",
    "href": "tipsAndTricks.html",
    "title": "Tips and Tricks",
    "section": "",
    "text": "Here are some tools that can improve your data visualizations\nColors can be used as a tool to emphasize an idea on a graph. To change the color of the points/lines on your graph, select the color you want using color=” “ in the function specifying the graph type. For example, to change the default black points in a scatter plot to blue,\nggplot(data=dataset, mapping=aes(x=xVariable, y=yVariable))+ \ngeom_point(color=\"blue\"))\nThere are many colors to choose from, but it is important to consider how your audience would perceive them. Are they bright and straining? Are they accessible to someone who has visual impairments?\nFill is an argument that is useful in generating a plot with multiple ___.\nFacet wrap is a function that can display multiple data visualizations at once. It is used to show graphs with the same axes with a change in a categorical variable. For example, we can compare the weights of all three Antarctic penguin species in one data visualization. It’s useful when trying to compare data, without creating a visually busy graph.\nTo do this, call on the facet_wrap( ) function and inside the parentheses, specify the categorical variable using a tilde (~).\n\nggplot(data=penguins, mapping=aes(x=bill_length_mm, y=body_mass_g))+ \n  geom_point()+ \n  facet_wrap(~species)+ \n  labs(title=\"Bill length by body mass for Antarctic Penguin Species\", x=\"Bill length (mm)\", y=\"Body mass (g)\")",
    "crumbs": [
      "Tips and Tricks"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Home",
    "section": "",
    "text": "The grammar of graphics package in R called ggplot2 is used to generate data visualizations. It breaks down the components of a plot, so you can adjust its aesthetics (size or intensity of plot points, colors, spatial arrangement of the elements) for a variety of graph types. Here, we will use ggplot2 to code:\n\nHistograms\nBox plots\nScatter plots\nBar plots",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#what-is-ggplot2",
    "href": "index.html#what-is-ggplot2",
    "title": "Home",
    "section": "",
    "text": "The grammar of graphics package in R called ggplot2 is used to generate data visualizations. It breaks down the components of a plot, so you can adjust its aesthetics (size or intensity of plot points, colors, spatial arrangement of the elements) for a variety of graph types. Here, we will use ggplot2 to code:\n\nHistograms\nBox plots\nScatter plots\nBar plots",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#installing-ggplot2",
    "href": "index.html#installing-ggplot2",
    "title": "Home",
    "section": "2 Installing ggplot2",
    "text": "2 Installing ggplot2\nggplot is a sub-package included in the tidyverse package. To install ggplot into your environment, run the code\ninstall.packages(\"tidyverse\")\nTo load ggplot into your environment, run\nlibrary(tidyverse)\nIn this tutorial, don’t worry about installing tidyverse. However, you must install it on any of your personal projects.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#elements-of-a-graph",
    "href": "index.html#elements-of-a-graph",
    "title": "Home",
    "section": "3 Elements of a graph",
    "text": "3 Elements of a graph\nThere are key features in all graphs, including:\nA title: A good title should be the conclusion of your data analysis, or the relationship of your X and Y axes.\nAxes: The X and Y axis should have their respective types of data. Each graph tutorial will guide you on what type of data goes on which axis.\nColors: Using colors can help guide your audience on what trend, if any, you want to emphasize. It is important to note that they should be used sparingly. While they may look pretty, having too many colors can be distracting of your data’s big picture.\nLegends: To prevent the graph from being too busy, consider using a legend to explain your graph’s features.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#what-makes-a-graph-good",
    "href": "index.html#what-makes-a-graph-good",
    "title": "Home",
    "section": "4 What makes a graph good?",
    "text": "4 What makes a graph good?\nAnyone should be able to look at a graph and understand your data without the context of your research. Take a step back from your code and ask yourself:\nWhat is this graph telling me? What is the relationship between the X and Y variables?\nThe key to making a graph comprehensible is to make its story as clear as possible. Use the elements of your graph as tools to convey this story.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#types-of-data",
    "href": "index.html#types-of-data",
    "title": "Home",
    "section": "5 Types of data",
    "text": "5 Types of data\nIdentifying the types of data you have will help you identify the type of graph you’ll need. There are two types of data with two subcategories for each:\nCategorical: data arranged in groups &gt; Nominal: No priority or ranking (e.g., yes or no, favorite colors)\n\nOrdinal: Structure within groups (e.g., small, medium, large; cold, warm, hot)\n\nNumerical: all things numbers\n\nContinuous: Decimal/fractional integers\n\n\nDiscrete: Whole integers",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#data-in-this-tutorial",
    "href": "index.html#data-in-this-tutorial",
    "title": "Home",
    "section": "6 Data in this tutorial",
    "text": "6 Data in this tutorial\nWe will be using three different data sets to hone in on our data science skills.\nPalmer penguins: This data set gives insight on the bill length, bill depth, flipper length, body mass, sex, and year of data collection of various Antarctic penguins.\n\n\n\n\n\n\nChick weight: This data set tracks the weight of chicks in grams on different diets over 21 days. The diet types are as follows:\n\nDiet 1: Normal feed with a 10% protein replacement\n\n\nDiet 2: Normal feed with a 20% protein replacement\n\n\nDiet 3: Normal feed with a 40% protein replacement\n\n\nDiet 4: Normal feed, controlled group\n\n\n\n\n\n\n\nTake a look at each data set. Do you notice any trends? What variables interest you?",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#ggplot-code-framework",
    "href": "index.html#ggplot-code-framework",
    "title": "Home",
    "section": "7 ggplot Code Framework",
    "text": "7 ggplot Code Framework\nIn order to use ggplot, there here is a skeletal framework:\nggplot(data=dataset, mapping=aes(x=xVariable, y=yVariable))+ geom_typeOfPlot()+ labs(title=\"Your title\", x=\"Name of X variable\", y=\"Your Y variable\")\nLet’s break down each part of this graph:\n\nFirst, are calling on the ggplot function.\nThen, we are asking R to look through our dataset.\nThe mapping=aes is used to change elements in your graph that are in the “Tips and Tricks” section of this site.\nAfter that, we are explicitly telling R what variables we want on each axis.\nNext, we are specifying which type of graph we want R to make.\nFinally, we call on the labs function to rename our axes with our variable names, making sure to include units when necessary.\n\nNow, we are ready to start coding! Let’s learn about some plots we can make with R.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "scatterPlot.html",
    "href": "scatterPlot.html",
    "title": "Scatter Plots",
    "section": "",
    "text": "A scatter plot compares both a numerical values on the x and y axes. They can be used to show trends over time, or to show the correlation between two variables.\nHere is the plot framework:",
    "crumbs": [
      "Scatter Plots"
    ]
  },
  {
    "objectID": "scatterPlot.html#what-is-a-scatter-plot",
    "href": "scatterPlot.html#what-is-a-scatter-plot",
    "title": "Scatter Plots",
    "section": "",
    "text": "A scatter plot compares both a numerical values on the x and y axes. They can be used to show trends over time, or to show the correlation between two variables.\nHere is the plot framework:",
    "crumbs": [
      "Scatter Plots"
    ]
  },
  {
    "objectID": "scatterPlot.html#penguin-data",
    "href": "scatterPlot.html#penguin-data",
    "title": "Scatter Plots",
    "section": "2 Penguin Data",
    "text": "2 Penguin Data\nIn the penguin data set, we can examine the relationship between bill depth and bill length.\nNote: To generate a scatter plot, we call on the geom_point( ) function with ggplot.\n\nggplot(data=penguins, mapping=aes(x=bill_length_mm, y=bill_depth_mm))+\n  geom_point()",
    "crumbs": [
      "Scatter Plots"
    ]
  },
  {
    "objectID": "scatterPlot.html#line-of-best-fit",
    "href": "scatterPlot.html#line-of-best-fit",
    "title": "Scatter Plots",
    "section": "3 Line of best fit",
    "text": "3 Line of best fit\nSo we have these dots, but how do we know if one variable really is related to another? We can use the Pearson correlation coeffcient, a measure of the linear relationship of two numeric variables. A perfect direct correlation would have a slope of 1, and a perfect indirect correlation would have a slope of -1.\nIn order to perform regression analysis, or how the x and y variables are related, we can use a linear model equation y=mx + b, where y is a function of the change in a given y-value times its respective x-value, plus the y-intercept, or where the y-value crosses the y=0 axis.\nAll this information can be found using this skeletal formula:\nvariable=lm(data = df, fomula = y-variable ~ x-variable)\nsummary(variable)\nHere is the skeletal fomula applied to our scatter plot of the penguin bill depth vs. bill length.\n\nbillDepthAndLengthModel=lm(data=penguins, formula=bill_depth_mm~bill_length_mm)\n\nsummary(billDepthAndLengthModel)\n\n\nCall:\nlm(formula = bill_depth_mm ~ bill_length_mm, data = penguins)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-4.1381 -1.4263  0.0164  1.3841  4.5255 \n\nCoefficients:\n               Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)    20.88547    0.84388  24.749  &lt; 2e-16 ***\nbill_length_mm -0.08502    0.01907  -4.459 1.12e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.922 on 340 degrees of freedom\n  (2 observations deleted due to missingness)\nMultiple R-squared:  0.05525,   Adjusted R-squared:  0.05247 \nF-statistic: 19.88 on 1 and 340 DF,  p-value: 1.12e-05\n\n\nWhile this output is intimidating, we only need two numbers for our purposes: the estimate intercept (b) and the slope (m), located right below that number.\nOur line of regression can be represented in the equation y = -0.08502x + 20.88574\nHere is the same scatter plot with the line of best fit:\n\nggplot(data=penguins, mapping=aes(x=bill_length_mm, y=bill_depth_mm))+\n  geom_point()+\n  geom_smooth(method=\"lm\")\n\n\n\n\n\n\n\n\nUsing the ChickWeight data set, that shows the the change in weight (variable: “weight”) over time in days (variable: “Time”) for chick 4.\nFirst, we must filter the ChickWeight data to include only data from chick 4 by creating a new variable, “chick4”.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nNow let’s create a scatter plot of chick 4’s weight over time. Don’t worry about adding a title or axes labels. Make sure to add a line of best fit!\n\nCode editorHintAnswer\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nR is case sensitive! The data set is named “ChickWeight” and the variables are “Time” and “weight”. Which variable belongs on the x-axis? Which variable belongs on the y-axis.\n\n\n\nggplot(data=chick4, mapping=aes(x=Time, y=weight))+\n  geom_point()+\n  geom_smooth(method=lm)\n\n\n\n\nLet’s generate the line of best fit summary table for the chick4 data, using the model code from above.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nWrite the linear regression equation (y=mx+b) based on the summary model.\n\nCode editorHintAnswer\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nMake sure you have the slope and y-intercept in their respective spots!\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.",
    "crumbs": [
      "Scatter Plots"
    ]
  },
  {
    "objectID": "barPlot.html",
    "href": "barPlot.html",
    "title": "Bar Plots",
    "section": "",
    "text": "A bar plot compares a categorical variable (x-axis) to a numeric continuous variable (y-axis). Each bar represents the average or the frequency for each categorical variable. The bars can also be used to represent the counts, or number of occurences within a categorical variable.\nHere is the framework for a bar graph:",
    "crumbs": [
      "Bar Plots"
    ]
  },
  {
    "objectID": "barPlot.html#what-is-a-bar-plot",
    "href": "barPlot.html#what-is-a-bar-plot",
    "title": "Bar Plots",
    "section": "",
    "text": "A bar plot compares a categorical variable (x-axis) to a numeric continuous variable (y-axis). Each bar represents the average or the frequency for each categorical variable. The bars can also be used to represent the counts, or number of occurences within a categorical variable.\nHere is the framework for a bar graph:",
    "crumbs": [
      "Bar Plots"
    ]
  },
  {
    "objectID": "boxPlot.html",
    "href": "boxPlot.html",
    "title": "Box Plots",
    "section": "",
    "text": "A box plot is a graph that shows a numeric summary (y-axis) of either a categorical or numerical variable (x-axis). It gives information on the spread of data.\nHere is the framework of a box plot, with a normally distributed data set.\n\nThe “box,” as shown below, represents three values: the 25th percentile (Q1), median (Q2), and the 75th percentile (Q3). Each horizontal bar corresponds to a number where that percentage of the data falls below, as shown. The box contains 50% of the data, known as the interquartile range. This value is calculated by subtracting Q1 from Q3.\nThe vertical lines that emerge from the box are called whiskers. The whisker closest to the x-axis represents the minimum calculated by subtracting 1.5 times the interquartile range from the value for Q1. The furthest whisker from the x-axis represents the maximum calculated by subtracting 1.5 times the interquartile range from Q3.\nHere is the same data plotted as a scatter plot and a box plot. “Index” refers to the position on the list from which the random numbers were generated. In short, a boxplot gives a summary as to where your data lie, or how the data is spread.",
    "crumbs": [
      "Box Plots"
    ]
  },
  {
    "objectID": "boxPlot.html#what-is-a-box-plot",
    "href": "boxPlot.html#what-is-a-box-plot",
    "title": "Box Plots",
    "section": "",
    "text": "A box plot is a graph that shows a numeric summary (y-axis) of either a categorical or numerical variable (x-axis). It gives information on the spread of data.\nHere is the framework of a box plot, with a normally distributed data set.\n\nThe “box,” as shown below, represents three values: the 25th percentile (Q1), median (Q2), and the 75th percentile (Q3). Each horizontal bar corresponds to a number where that percentage of the data falls below, as shown. The box contains 50% of the data, known as the interquartile range. This value is calculated by subtracting Q1 from Q3.\nThe vertical lines that emerge from the box are called whiskers. The whisker closest to the x-axis represents the minimum calculated by subtracting 1.5 times the interquartile range from the value for Q1. The furthest whisker from the x-axis represents the maximum calculated by subtracting 1.5 times the interquartile range from Q3.\nHere is the same data plotted as a scatter plot and a box plot. “Index” refers to the position on the list from which the random numbers were generated. In short, a boxplot gives a summary as to where your data lie, or how the data is spread.",
    "crumbs": [
      "Box Plots"
    ]
  },
  {
    "objectID": "boxPlot.html#penguin-data",
    "href": "boxPlot.html#penguin-data",
    "title": "Box Plots",
    "section": "2 Penguin Data",
    "text": "2 Penguin Data\nUsing the penguin dataset, we can compare the flipper lengths (variable: flipper_length_mm) of the different species (variable: species) of penguins.\nNote: We will call on the geom_boxplot( ) function when we code using ggplot\n\nggplot(data=penguins, mapping = aes(x=species, y=flipper_length_mm))+\n  geom_boxplot()+\n  labs(x=\"Species of Antarctic penguin\", y=\"Flipper length (mm)\", title = \"Species of Antarctic penguins have different flipper lengths\")\n\n\n\n\n\n\n\n\nFor the Adelie penguins, there are outliers on either side of the whiskers. These are values fall short/exceed the whisker value calculation.\nNow, compare the flipper lengths (variable: flipper_length_mm) of the different sexes (variable: sex) of penguins",
    "crumbs": [
      "Box Plots"
    ]
  },
  {
    "objectID": "barPlot.html#penguin-data",
    "href": "barPlot.html#penguin-data",
    "title": "Bar Plots",
    "section": "2 Penguin data",
    "text": "2 Penguin data\nNow, let’s see how the average bill depths of female and male Adelie penguins compare, using the penguins dataset.\nNote: We will call on the geom_bar( ) function using ggplot. When we call this function, we use stat=“identity” to tell R we want our y-axis to represent the average bill depth, instead of counting how many sexes are represented for Adelie penguins in this data set.\nWe will also use the “fill=” argument. It visually differentiates the bar graph based on the variable specified by color. This is further explained in the “Tips and Tricks” subsection.\n\n#first, we must filter the Penguin data to only include Adelie penguins and exclude NA values from the sex column\nfemalePenguins&lt;- penguins |&gt;\n  filter(sex==\"female\")|&gt;\n  group_by(species) |&gt;\n  summarize(avgBodyMass = mean(body_mass_g, na.rm=TRUE), sdBodyMass = sd(body_mass_g, na.rm=TRUE))\n  \nggplot(data=femalePenguins, mapping = aes(x = species, y=avgBodyMass, fill=species))+\n  geom_bar(stat=\"identity\")+\n  labs(title=\"Average Body Mass for Female Antarctic Penguin Species\", x=\"Penguin species\", y=\"Average body mass (g)\")\n\n\n\n\n\n\n\n\nWhile the averages look different, we cannot be sure of how different they are. Averages are sensitive to outliers. For example, there is a possibility that most female Gentoo penguins have a body mass of 3000g, but there are a few penguins that exceed this value greatly, increasing the mean from the most common body mass.\nTo avoid this, we can add error bars to our bar graphs when representing averages. Error bars help represent the spread of data using a quantity known as the standard deviation. The standard deviation represents, on average, how much every data point is from the mean.\nThe error bars give a better gague on how similar groups are; if the error bars overlap, they are likely not statistically different. If the error bars do not overlap, they are likely statistically different. Further statistical analyses must be performed to confirm if they are statistically different.\nThe error bars extend from the top of the column plus and minus the standard deviation. Here is the same plot, with the error bars and the equations to calculate them.\nNote: To create error bars, call on the geom_errorbar( ) function, with a nested mapping=aes( ), as shown\n\nggplot(data=femalePenguins, mapping = aes(x = species, y=avgBodyMass, fill = species))+\n  geom_bar(stat=\"identity\")+\n  geom_errorbar(mapping=aes(ymin=avgBodyMass-sdBodyMass, ymax=avgBodyMass+sdBodyMass))+\n  labs(title=\"Average Body Mass for Female Antarctic Penguin Species\", x=\"Penguin species\", y=\"Average body mass (g)\")\n\n\n\n\n\n\n\n\n The error bars for the female Adelie and Chinstrap overlap, so they are likely not statistically different. However, the error bars for the Gentoo penguins have no overlap with the other Antarctic penguin species, so Gentoo penguins likely have a statistically signifcant difference in mass from other Antartic penguins in this dataset.\nNow, using the ChickWeights data set, generate a plot that shows the average weight (variable: weight) of each of the four chicks (variable: chick).",
    "crumbs": [
      "Bar Plots"
    ]
  },
  {
    "objectID": "scatterPlot.html#hint-1",
    "href": "scatterPlot.html#hint-1",
    "title": "Scatter Plots",
    "section": "4 Hint",
    "text": "4 Hint\nMake sure you have the slope and y-intercept in their respective spots!",
    "crumbs": [
      "Scatter Plots"
    ]
  },
  {
    "objectID": "scatterPlot.html#answer-1",
    "href": "scatterPlot.html#answer-1",
    "title": "Scatter Plots",
    "section": "5 Answer",
    "text": "5 Answer\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n:::",
    "crumbs": [
      "Scatter Plots"
    ]
  },
  {
    "objectID": "histogram.html#chick-data",
    "href": "histogram.html#chick-data",
    "title": "Histograms",
    "section": "3 Chick Data",
    "text": "3 Chick Data\nLet’s try using the ChickWeight data set! Using the model code above, create a histogram to see the distribution of chick weights (variable “weight”) using the ChickWeight dataset.\n\nCode editorHintAnswer\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nR is case sensitive! The data set is named “ChickWeight” and the variable is “weight”.\n\n\n\nggplot(data=ChickWeight, mapping=aes(x=weight, na.rm=TRUE))+\n  geom_histogram(bins=20)\n\n\n\n\nHow is the data distributed? Are there more chicks that fall into a weight interval to the left of the graph, to the right of the graph, or is it normally distributed?\nThe histogram is left skewed, meaning throughout the data, most chicks’ weights fall between 0-100g.",
    "crumbs": [
      "Histograms"
    ]
  }
]